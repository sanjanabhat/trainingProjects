import java.io.*;
import java.util.*;

 class StackWithMax {
    Stack<Integer> stack=new Stack<Integer>();
    Stack<Integer> maxStack=new Stack<Integer>();
    void push(int ele){
        stack.push(ele);
        if(!maxStack.empty()){
        if(maxStack.peek()<=ele)
        maxStack.push(ele);
        }
        else maxStack.push(ele);
        //System.out.println(maxStack.peek()+" "+stack.peek());
    }
    void pop(){
        int num;
        if(!stack.empty()){
         num=stack.pop();
            if(!maxStack.empty()){
        if(maxStack.peek()==num)
        maxStack.pop();
            }}}
     
    int findMax(){
        int max;
        if(!maxStack.empty()) {
         max=maxStack.peek();
        return max;
        }
        return -1;
    }
}
public class Solution{
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        StackWithMax stackUnderTest=new StackWithMax();
      
        Scanner scan=new Scanner(System.in);
        int n=scan.nextInt();
        for(int i=0;i<n;i++){
            int choice=scan.nextInt();
            switch(choice){
        case 1:
        int number=scan.nextInt();
        stackUnderTest.push(number);
                
        break;
        case 2:stackUnderTest.pop();
        break;
        case 3:System.out.println(stackUnderTest.findMax());
                
        break;
            }}}
}
